name: Repo2Docker

on:
  push:
    branches:
      - master
    tags:
      - '*'
    paths:
      - binder/*
      - requirements.txt
  pull_request:
    branches:
      - master
    paths:
      - binder/*
      - requirements.txt

env:
  CONTAINER_NAME: uwgda/uwgda-image
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v1
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
    - name: Build Image
      run: |
        if docker pull $CONTAINER_NAME:latest; then
          jupyter-repo2docker --cache-from $CONTAINER_NAME:latest --debug --user-name jovyan --user-id 1000 --no-run --image-name $CONTAINER_NAME:latest $PWD
        else
          jupyter-repo2docker --debug --user-name jovyan --user-id 1000 --no-run --image-name $CONTAINER_NAME:latest $PWD
        fi
        mkdir conda-packages
        docker run $CONTAINER_NAME:latest conda list > conda-packages/packages.txt
    - name: Archive Conda Package List
      uses: actions/upload-artifact@v1
      with:
        name: conda-packages
        path: conda-packages
    - name: Authenticate with DockerHub
      if: startswith(github.ref, 'refs/tags') || github.ref == 'refs/heads/master'
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Push Image to DockerHub (latest & sha tags)
      if: github.ref == 'refs/heads/master'
      run: |
        DOCKER_TAG=${GITHUB_SHA::7}
        docker tag $CONTAINER_NAME:latest $CONTAINER_NAME:$DOCKER_TAG
        docker push $CONTAINER_NAME:$DOCKER_TAG
        docker push $CONTAINER_NAME:latest
    - name: Push Tagged Release Image to DockerHub
      if: startswith(github.ref, 'refs/tags/')
      run: |
        DOCKER_TAG=${GITHUB_REF##*/}
        docker tag $CONTAINER_NAME:latest $CONTAINER_NAME:$DOCKER_TAG
        docker push $CONTAINER_NAME:$DOCKER_TAG
